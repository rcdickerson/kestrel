// Example which should verify, but which does not require
// any choice synthesis.
//
// From:
//   Sabelfeld, Andrei & Myers, Andrew. (2004).
//   A Model for Delimited Information Release.
//   Lecture Notes in Computer Science. 10.1007/978-3-540-37621-7_9.

// ** represents an arbitrary value.
// ?? represents a hole to be filled by the synthesizer.

void product(int low_1, int low_2, int high_1, high_2) {
  assume low_1 == low_2;
  assume high_1 % 2 == high_2 % 2; // Delimited release.

  // Universal.
  int p_1 = **;
  assume p_1 == high_1 % 2;

  // Existential.
  int p_2 = **;
  assume p_2 == high_2 % 2;

  if (p_1 == 1 && p_2 == 1) {
    low_1 = 1;
    high_1 = 1;
    low_2 = 1;
    high_2 = 1;
  } else if (p_1 != 1 && p_2 == 1) {
    low_1 = 0;
    high_1 = 0;
    low_2 = 1;
    high_2 = 1;
  } else if (p_1 == 1 && p_2 != 1) {
    low_1 = 1;
    high_1 = 1;
    low_2 = 0;
    high_2 = 0;
  } else {
    low_1 = 0;
    high_1 = 0;
    low_2 = 0;
    high_2 = 0;
  }

  assert low_1 == low_2;
}