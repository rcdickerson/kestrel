
Unaligned Product Program
--------------------------
#include "seahorn/seahorn.h"

extern int arb_int();

void main(int l_n, int r_n) {
  int l_x = 0;
  int l_i = 0;
  while (l_i <= l_n) {
    l_x = (l_x + 1);
    l_i = (l_i + 1);
  }
  int r_x = 0;
  int r_i = 0;
  while (r_i <= r_n) {
    r_x = (r_x + 1);
    r_i = (r_i + 1);
  }
 }

--------------------------
Starting simulated annealing...
Score 0.8114527 at temperature 1
Score 0.80969906 at temperature 0.98802394
Score 0.8084253 at temperature 0.98602796
Score 0.5542759 at temperature 0.9161677
Simulated annealing complete.
Saw 464 configurations
Best score: 0.5542759

Aligned Eggroll
--------------------------
(fundef
  (specifiers (type void))
  main
  (params
    (param-declaration (specifiers (type int)) l_n)
    (param-declaration (specifiers (type int)) r_n))
  (seq
    (seq
      (<|
        (basic-block
          (declaration (specifiers (type int)) l_x (initializer (const-int 0)))
          (declaration (specifiers (type int)) l_i (initializer (const-int 0)))))
      (|>
        (basic-block
          (declaration (specifiers (type int)) r_x (initializer (const-int 0)))
          (declaration (specifiers (type int)) r_i (initializer (const-int 0))))))
    (while-lockstep
      1
      1
      (<= l_i l_n)
      (<= r_i r_n)
      (basic-block (= l_x (+ l_x (const-int 1))) (= l_i (+ l_i (const-int 1))))
      (basic-block (= r_x (+ r_x (const-int 1))) (= r_i (+ r_i (const-int 1)))))))
--------------------------

Aligned Product Program
--------------------------
#include "seahorn/seahorn.h"

extern int arb_int();

void main() {
  int l_n = arb_int();
  int r_n = arb_int();
  assume(l_n == r_n);
  int l_x = 0;
  int l_i = 0;
  int r_x = 0;
  int r_i = 0;
  while ((l_i <= l_n) && (r_i <= r_n)) {
    l_x = (l_x + 1);
    l_i = (l_i + 1);
    r_x = (r_x + 1);
    r_i = (r_i + 1);
  }
  while ((l_i <= l_n) && (!(r_i <= r_n))) {
    l_x = (l_x + 1);
    l_i = (l_i + 1);
  }
  while ((!(l_i <= l_n)) && (r_i <= r_n)) {
    r_x = (r_x + 1);
    r_i = (r_i + 1);
  }
  sassert(l_x == r_x);
 }

--------------------------
Writing output to ./results/antonopoulos/sa/simple.c...
Done

real	0m0.248s
user	0m0.210s
sys	0m0.015s
