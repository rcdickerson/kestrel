
Unaligned Product Program
--------------------------
#include "seahorn/seahorn.h"

extern int arb_int();

void main(int l_k, int l_x, int r_k, int r_x) {
  int l_i = 0;
  while (l_i < N) {
    a_1[l_i] = (a_1[l_i] + l_k);
    if (l_x < 7) {
      b_1[l_i] = (a_1[l_i] * c_1[l_i]);
    } else {b_1[l_i] = (a_1[l_i - 1] * b_1[l_i - 1]);
    }
    l_i = (l_i + 1);
  }
  if (r_x < 7) {
    int r_j = 0;
    while (r_j < N) {
      a_2[r_j] = (a_2[r_j] + r_k);
      b_2[r_j] = (a_2[r_j] * c_2[r_j]);
      r_j = (r_j + 1);
    }
  } else {int r_j = 0;
    while (r_j < N) {
      a_2[r_j] = (a_2[r_j] + r_k);
      b_2[r_j] = (a_2[r_j - 1] * b_2[r_j - 1]);
      r_j = (r_j + 1);
    }
  }
 }

--------------------------

real	5m0.001s
user	4m59.826s
sys	0m0.103s
