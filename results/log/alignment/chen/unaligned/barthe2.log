
Unaligned Product Program
--------------------------
#include "seahorn/seahorn.h"

extern int arb_int();

void main(int l_n, int r_n) {
  int l_x;
  int l_i;
  l_i = 0;
  l_x = 0;
  while (l_i <= l_n) {
    l_x = (l_x + l_i);
    l_i = (l_i + 1);
  }
  int r_x;
  int r_j;
  r_j = 1;
  r_x = 0;
  while (r_j <= r_n) {
    r_x = (r_x + r_j);
    r_j = (r_j + 1);
  }
 }

--------------------------

Unaligned Eggroll
--------------------------
(fundef
  (specifiers (type void))
  main
  (params
    (param-declaration (specifiers (type int)) l_n)
    (param-declaration (specifiers (type int)) r_n))
  (<|>
    (seq
      (basic-block
        (declaration (specifiers (type int)) l_x no-initializer)
        (declaration (specifiers (type int)) l_i no-initializer)
        (= l_i (const-int 0))
        (= l_x (const-int 0)))
      (while
        (<= l_i l_n)
        (basic-block (= l_x (+ l_x l_i)) (= l_i (+ l_i (const-int 1))))))
    (seq
      (basic-block
        (declaration (specifiers (type int)) r_x no-initializer)
        (declaration (specifiers (type int)) r_j no-initializer)
        (= r_j (const-int 1))
        (= r_x (const-int 0)))
      (while
        (<= r_j r_n)
        (basic-block (= r_x (+ r_x r_j)) (= r_j (+ r_j (const-int 1))))))))
--------------------------
Treating naive product as final alignment.

Aligned Eggroll
--------------------------
(fundef
  (specifiers (type void))
  main
  (params
    (param-declaration (specifiers (type int)) l_n)
    (param-declaration (specifiers (type int)) r_n))
  (<|>
    (seq
      (basic-block
        (declaration (specifiers (type int)) l_x no-initializer)
        (declaration (specifiers (type int)) l_i no-initializer)
        (= l_i (const-int 0))
        (= l_x (const-int 0)))
      (while
        (<= l_i l_n)
        (basic-block (= l_x (+ l_x l_i)) (= l_i (+ l_i (const-int 1))))))
    (seq
      (basic-block
        (declaration (specifiers (type int)) r_x no-initializer)
        (declaration (specifiers (type int)) r_j no-initializer)
        (= r_j (const-int 1))
        (= r_x (const-int 0)))
      (while
        (<= r_j r_n)
        (basic-block (= r_x (+ r_x r_j)) (= r_j (+ r_j (const-int 1))))))))
--------------------------

Aligned Product Program
--------------------------
#include "seahorn/seahorn.h"

extern int arb_int();

void main() {
  int l_n = arb_int();
  int r_n = arb_int();
  assume(l_n == r_n);
  int l_x;
  int l_i;
  l_i = 0;
  l_x = 0;
  while (l_i <= l_n) {
    l_x = (l_x + l_i);
    l_i = (l_i + 1);
  }
  int r_x;
  int r_j;
  r_j = 1;
  r_x = 0;
  while (r_j <= r_n) {
    r_x = (r_x + r_j);
    r_j = (r_j + 1);
  }
  sassert(l_x == r_x);
 }

--------------------------
Writing output to ./results/alignments/chen/unaligned/barthe2.c...
Done

real	0m0.037s
user	0m0.132s
sys	0m0.110s
